[package]
name = "soul_bomb_monster_hunt"
version = "0.2.3"
edition = "2021"

[dependencies]
bevy = { version = "0.14.2", features = ["wayland", "webgl2"] }
# bevy-trait-query = "0.5.1"
strum = "0.26.3"
strum_macros = "0.26.4"
rand = "0.8.5"
lazy_static = "1.4.0"
serde = { version = "1.0.197", features = ["derive"] }
leafwing-input-manager = "0.15.1"
# Compile low-severity logs out of native builds for performance.
log = { version = "0.4", features = [
    "max_level_debug",
    "release_max_level_warn",
] }
# Compile low-severity logs out of web builds for performance.
tracing = { version = "0.1", features = [
    "max_level_debug",
    "release_max_level_warn",
] }

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1
debug = 1     # less precise locations

# Enable high optimizations for dependencies, but not for our code:
[profile.dev.package."*"]
debug = false # no debug symbols for deps
opt-level = 2 # makes their code smaller too

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

# The default profile is optimized for Wasm builds because
# that's what [Trunk reads](https://github.com/trunk-rs/trunk/issues/605).
# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"

# Override some settings for native builds.
[profile.release-native]
# Default to release profile values.
inherits = "release"
# Optimize with performance in mind.
opt-level = 3
# Keep debug information in the binary.
strip = "none"

[target.wasm32-unknown-unknown]
runner = "wasm-server-runner"

# Idiomatic Bevy code often triggers these lints, and the CI workflow treats them as errors.
# In some cases they may still signal poor code quality however, so consider commenting out these lines.
[lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments -- which triggers this lint.
too_many_arguments = "allow"
# Queries that access many components may trigger this lint.
type_complexity = "allow"
